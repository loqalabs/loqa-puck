name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: loqalabs/loqa-test-puck

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  checkout-proto:
    uses: loqalabs/.github/.github/workflows/go-checkout-proto.yml@main

  test-go:
    name: Test Go Client with Hardware
    needs: checkout-proto
    uses: loqalabs/.github/.github/workflows/go-test-with-hardware.yml@main
    with:
      go-version: '1.23.0'
      proto-repo: 'loqalabs/loqa-proto'
      system-packages: 'portaudio19-dev'
      working-directory: 'test-go'
      coverage-flag: 'puck-go'
      coverage-name: 'loqa-puck-go'

  build-go:
    name: Build Go Client
    needs: [checkout-proto, test-go]
    uses: loqalabs/.github/.github/workflows/go-build.yml@main
    with:
      go-version: '1.23.0'
      binary-name: 'test-puck-linux-amd64'
      working-directory: 'test-go'
      proto-repo: 'loqalabs/loqa-proto'

  security:
    name: Security Analysis
    uses: loqalabs/.github/.github/workflows/security-scan.yml@main
    with:
      language: 'go'
      go-version: '1.23.0'

  docker:
    name: Docker Build and Security
    needs: [test-go, security]
    if: github.event_name != 'pull_request'
    uses: loqalabs/.github/.github/workflows/docker-build-and-push.yml@main
    with:
      registry: docker.io
      image-name: loqalabs/loqa-test-puck
    secrets:
      docker-username: ${{ secrets.DOCKER_USERNAME }}
      docker-token: ${{ secrets.DOCKER_TOKEN }}